apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {

    // Keys for buildConfigFields
    def API_ENDPOINT = "API_ENDPOINT"
    def API_ENDPOINT_REDDIT = '"https://www.reddit.com/r/Android/"'

    def versionMajor = 1
    def versionMinor = 0
    def versionPatch = 0

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.fastnews"

        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode 100000
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
    }

    signingConfigs {
        release {
            storeFile file("key/fast-news-key.jks")
            storePassword "RPOXCi1I2hDOo4LbmQhSPgQN82216G6c"
            keyAlias "fast-news"
            keyPassword "RPOXCi1I2hDOo4LbmQhSPgQN82216G6c"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles(
                    'proguard/proguard-android-support.pro',
                    'proguard/proguard-retrofit.pro',
                    'proguard/proguard-project.pro',
                    'proguard/proguard-okio.pro')
            buildConfigField "String", API_ENDPOINT, API_ENDPOINT_REDDIT
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            buildConfigField "String", API_ENDPOINT, API_ENDPOINT_REDDIT
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/atomicfu.kotlin_module'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'

        main {
            file('src/main/res')
                    .listFiles()
                    .each { res.srcDirs += it.path }
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'

    // Test
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Kotlin coroutines
    def coroutinesVersion = '1.4.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Retrofit
    def retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    //Okhttp3
    implementation "com.squareup.okhttp3:okhttp:4.9.0"

    // Lifecycle
    def archLifecycleVersion = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel:$archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"

    // ViewModel Kotlin support
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$archLifecycleVersion"

    // Extensions
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"

    // Glide
    def glideVersion = '4.11.0'
    implementation("com.github.bumptech.glide:glide:$glideVersion") {
        exclude group: "com.android.support"
    }
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    // CardView
    implementation 'androidx.cardview:cardview:1.0.0'

    // Bottom sheet
    implementation 'com.flipboard:bottomsheet-core:1.5.3'

    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'com.google.android.material:material:1.2.1'

    // Custom tabs
    implementation 'com.android.support:customtabs:28.0.0'

    // Koin
    def koinVersion = "2.2.2"
    implementation "org.koin:koin-android:$koinVersion"
    implementation "org.koin:koin-android-viewmodel:$koinVersion"
    implementation "org.koin:koin-androidx-scope:$koinVersion"

    // Room
    def roomVersion = "2.2.5"
    implementation "androidx.room:room-runtime:$roomVersion"
    annotationProcessor "androidx.room:room-compiler:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

}
